{"version":3,"sources":["../../src/helpers/auth.js"],"names":["checkAuth","req","res","next","token","headers","body","jwt","verify","process","env","SECRET_KEY","err","decoded","status","json","message","error"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,YAAY,SAAZA,SAAY,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACpC,MAAMC,QAAQH,IAAII,OAAJ,CAAY,gBAAZ,KAAiCJ,IAAIK,IAAJ,CAASF,KAAxD;AACA,MAAIA,KAAJ,EAAW;AACTG,2BAAIC,MAAJ,CAAWJ,KAAX,EAAkBK,QAAQC,GAAR,CAAYC,UAA9B,EAA0C,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC1D,UAAID,GAAJ,EAAS;AACPV,YAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,kBAAQ,QADW;AAEnBE,mBAAS,cAFU;AAGnBC,iBAAOL,IAAII;AAHQ,SAArB;AAKD,OAND,MAMO;AACLf,YAAIK,IAAJ,CAASO,OAAT,GAAmBA,OAAnB;AACAV;AACD;AACF,KAXD;AAYD,GAbD,MAaO;AACLD,QAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,cAAQ,QADW;AAEnBE,eAAS;AAFU,KAArB;AAID;AACF,CArBD;;kBAwBehB,S","file":"auth.js","sourcesContent":["import jwt from 'jsonwebtoken';\r\n\r\nconst checkAuth = (req, res, next) => {\r\n  const token = req.headers['x-access-token'] || req.body.token;\r\n  if (token) {\r\n    jwt.verify(token, process.env.SECRET_KEY, (err, decoded) => {\r\n      if (err) {\r\n        res.status(401).json({\r\n          status: 'Failed',\r\n          message: 'Unauthorized',\r\n          error: err.message\r\n        });\r\n      } else {\r\n        req.body.decoded = decoded;\r\n        next();\r\n      }\r\n    });\r\n  } else {\r\n    res.status(400).json({\r\n      status: 'Failed',\r\n      message: 'No token entered'\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport default checkAuth;"]}