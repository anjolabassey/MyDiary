{"version":3,"sources":["../src/db.js"],"names":["database","addOne","entry","id","Math","floor","random","push","getAll","getOne","i","length","modifyOne","title","body","deleteOne","splice","module","exports"],"mappings":";;AAAA,IAAMA,WAAW,EAAjB;;AAEA,IAAMC,SAAS,SAATA,MAAS,CAACC,KAAD,EAAW;AACxB,MAAMC,KAAKC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,CAAX;AACAJ,QAAMC,EAAN,GAAWA,EAAX;AACA,SAAOH,SAASO,IAAT,CAAcL,KAAd,CAAP;AACD,CAJD;;AAOA,IAAMM,SAAS,SAATA,MAAS,GAAM;AACnB,SAAOR,QAAP;AACD,CAFD;;AAKA,IAAMS,SAAS,SAATA,MAAS,CAACN,EAAD,EAAQ;AACrB;AACA,OAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIV,SAASW,MAA7B,EAAqCD,GAArC,EAA0C;AACxC,QAAIV,SAASU,CAAT,EAAYP,EAAZ,KAAmBA,EAAvB,EAA2B;AACzB,aAAOH,SAASU,CAAT,CAAP;AACD;AACF;AACD,SAAO,iBAAP;AACD,CARD;;AAUA,IAAME,YAAY,SAAZA,SAAY,CAACV,KAAD,EAAW;AAC3B,OAAK,IAAIQ,IAAI,CAAb,EAAgBA,IAAIV,SAASW,MAA7B,EAAqCD,GAArC,EAA0C;AACxC,QAAIV,SAASU,CAAT,EAAYP,EAAZ,KAAmBD,MAAMC,EAA7B,EAAiC;AAC/BH,eAASU,CAAT,EAAYG,KAAZ,GAAoBX,MAAMW,KAA1B;AACAb,eAASU,CAAT,EAAYI,IAAZ,GAAmBZ,MAAMY,IAAzB;AACA,aAAOd,SAASU,CAAT,CAAP;AACD;AACF;AACD,SAAO,iBAAP;AACD,CATD;;AAWA,IAAMK,YAAY,SAAZA,SAAY,CAACZ,EAAD,EAAQ;AACxB,OAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIV,SAASW,MAA7B,EAAqCD,GAArC,EAA0C;AACxC,QAAIV,SAASU,CAAT,EAAYP,EAAZ,KAAmBA,EAAvB,EAA2B;AACzB,aAAOH,SAASgB,MAAT,CAAgBN,CAAhB,EAAmB,CAAnB,CAAP;AACD;AACF;AACD,SAAO,iBAAP;AACD,CAPD;;AASAO,OAAOC,OAAP,GAAiB;AACflB,oBADe;AAEfC,gBAFe;AAGfO,gBAHe;AAIfC,gBAJe;AAKfG,sBALe;AAMfG;AANe,CAAjB","file":"db.js","sourcesContent":["const database = [];\r\n\r\nconst addOne = (entry) => {\r\n  const id = Math.floor(Math.random() * 100);\r\n  entry.id = id;\r\n  return database.push(entry);\r\n};\r\n\r\n\r\nconst getAll = () => {\r\n  return database;\r\n};\r\n\r\n\r\nconst getOne = (id) => {\r\n  // database.find(entry => entry.id === id);\r\n  for (let i = 0; i < database.length; i++) {\r\n    if (database[i].id === id) {\r\n      return database[i];\r\n    }\r\n  }\r\n  return 'Entry not found';\r\n};\r\n\r\nconst modifyOne = (entry) => {\r\n  for (let i = 0; i < database.length; i++) {\r\n    if (database[i].id === entry.id) {\r\n      database[i].title = entry.title;\r\n      database[i].body = entry.body;\r\n      return database[i];\r\n    }\r\n  }\r\n  return 'Entry not found';\r\n};\r\n\r\nconst deleteOne = (id) => {\r\n  for (let i = 0; i < database.length; i++) {\r\n    if (database[i].id === id) {\r\n      return database.splice(i, 1);\r\n    }\r\n  }\r\n  return 'Entry not found';\r\n};\r\n\r\nmodule.exports = {\r\n  database,\r\n  addOne,\r\n  getAll,\r\n  getOne,\r\n  modifyOne,\r\n  deleteOne\r\n};"]}