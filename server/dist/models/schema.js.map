{"version":3,"sources":["../../src/models/schema.js"],"names":["createEntryTable","client","query","err","res","console","log","createUserTable","deleteUserTable","deleteEntryTable"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,mBAAmB,SAAnBA,gBAAmB,GAAM;AAC7BC,mBAAOC,KAAP,CAAa,qQAAb,EAAoR,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChS,QAAID,GAAJ,EAAS;AACPE,cAAQC,GAAR,CAAYH,GAAZ;AACD,KAFD,MAEO;AACLE,cAAQC,GAAR,CAAY,mCAAZ;AACD;AACF,GAND;AAOD,CARD;;AAUA,IAAMC,kBAAkB,SAAlBA,eAAkB,GAAM;AAC5BN,mBAAOC,KAAP,CAAa,+LAAb,EAA8M,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1N,QAAID,GAAJ,EAAS;AACPE,cAAQC,GAAR,CAAYH,GAAZ;AACD,KAFD,MAEO;AACLE,cAAQC,GAAR,CAAY,iCAAZ;AACD;AACF,GAND;AAOD,CARD;;AAUA,IAAME,kBAAkB,SAAlBA,eAAkB,GAAM;AAC5BP,mBAAOC,KAAP,CAAa,oCAAb,EAAmD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/D,QAAID,GAAJ,EAAS;AACPE,cAAQC,GAAR,CAAYH,GAAZ;AACD,KAFD,MAEO;AACLE,cAAQC,GAAR,CAAY,iCAAZ;AACD;AACF,GAND;AAOD,CARD;;AAUA,IAAMG,mBAAmB,SAAnBA,gBAAmB,GAAM;AAC7BR,mBAAOC,KAAP,CAAa,sCAAb,EAAqD,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjE,QAAID,GAAJ,EAAS;AACPE,cAAQC,GAAR,CAAYH,GAAZ;AACD,KAFD,MAEO;AACLE,cAAQC,GAAR,CAAY,mCAAZ;AACD;AACF,GAND;AAOD,CARD;;QAWEN,gB,GAAAA,gB;QACAO,e,GAAAA,e;QACAC,e,GAAAA,e;QACAC,gB,GAAAA,gB","file":"schema.js","sourcesContent":["import { db, client } from './database';\r\n\r\nconst createEntryTable = () => {\r\n  client.query('CREATE TABLE IF NOT EXISTS entries (id SERIAL PRIMARY KEY, title CHARACTER VARYING(50) NOT NULL, body CHARACTER VARYING(1000) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT(NOW()), last_updated TIMESTAMP NOT NULL DEFAULT(NOW()), user_id INT REFERENCES users)', (err, res) => {\r\n    if (err) {\r\n      console.log(err);\r\n    } else {\r\n      console.log('Created entries table succesfully');\r\n    }\r\n  });\r\n};\r\n\r\nconst createUserTable = () => {\r\n  client.query('CREATE TABLE IF NOT EXISTS users (user_id SERIAL PRIMARY KEY, email CHARACTER VARYING(30) UNIQUE NOT NULL, username CHARACTER VARYING(30) NOT NULL, password CHARACTER VARYING(250) NOT NULL)', (err, res) => {\r\n    if (err) {\r\n      console.log(err);\r\n    } else {\r\n      console.log('Created users table succesfully');\r\n    }\r\n  });\r\n};\r\n\r\nconst deleteUserTable = () => {\r\n  client.query('DROP TABLE IF EXISTS users CASCADE', (err, res) => {\r\n    if (err) {\r\n      console.log(err);\r\n    } else {\r\n      console.log('Deleted users table succesfully');\r\n    }\r\n  });\r\n};\r\n\r\nconst deleteEntryTable = () => {\r\n  client.query('DROP TABLE IF EXISTS entries CASCADE', (err, res) => {\r\n    if (err) {\r\n      console.log(err);\r\n    } else {\r\n      console.log('Deleted entries table succesfully');\r\n    }\r\n  });\r\n};\r\n\r\nexport {\r\n  createEntryTable,\r\n  createUserTable,\r\n  deleteUserTable,\r\n  deleteEntryTable\r\n};"]}